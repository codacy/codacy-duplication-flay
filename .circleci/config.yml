# CircleCI 2.0 configuration file
version: 2.1

orbs:
  codacy: codacy/base@6.0.0
  codacy_plugins_test: codacy/plugins-test@0.15.4

jobs:
  test:
    machine: true
    working_directory: ~/workdir
    steps:
      - attach_workspace:
          at: ~/workdir
      - run:
          name: Install the tool
          command: |
            sudo apt-get -y update
            sudo apt-get -y install ruby-full
            sudo gem install bundler -v 1.17.3
            bundle install
      - run:
          name: Test
          command: scripts/test.sh
      - run:
          name: Store test reports
          command: |
            mkdir -p coverage-reports/scoverage
            cp -f target/scala-2.12/coverage-report/cobertura.xml coverage-reports/scoverage/results.xml
      - store_test_results:
          path: coverage-reports
      - store_artifacts:
          path: target/scala-2.12/coverage-report
      - store_artifacts:
          path: target/scala-2.12/scoverage-report
      - store_artifacts:
          path: target/scala-2.12/scoverage-data

workflows:
  version: 2
  test_and_publish:
    jobs:
      - codacy/checkout_and_version
      - codacy/sbt:
          name: sbt_dependencies
          cmd: |
            sbt update
          persist_to_workspace: true
          requires:
            - codacy/checkout_and_version
      - codacy/sbt:
          name: compile
          cmd: |
            sbt ";compile;test:compile"
          persist_to_workspace: true
          requires:
            - codacy/checkout_and_version
            - sbt_dependencies
      - test:
          requires:
            - compile
      - codacy/sbt:
          name: lint
          cmd: |
            sbt "set scalafmtUseIvy in ThisBuild := false;
                 scalafmt::test;
                 test:scalafmt::test;
                 sbt:scalafmt::test;
                 scapegoat;
                 scalafixCli --test"
          requires:
            - compile
      - codacy/sbt:
          name: publish_docker_local
          cmd: |
            sbt "set version in Docker := \"latest\";
                 docker:publishLocal"
            docker save --output docker-image.tar $CIRCLE_PROJECT_REPONAME:latest
          persist_to_workspace: true
          requires:
            - compile
            - codacy/checkout_and_version
      - codacy_plugins_test/run:
          name: plugins_test
          run_json_tests: false
          run_duplication_tests: true
          requires:
            - publish_docker_local
      - codacy/publish_docker:
          context: CodacyDocker
          requires:
            - test
            - lint
            - plugins_test
            - publish_docker_local
          filters:
            branches:
              only:
                - master
      - codacy/tag_version:
           name: tag_version
           context: CodacyAWS
           requires:
             - codacy/publish_docker
